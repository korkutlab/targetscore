% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_dat_network.R
\name{predict_dat_network}
\alias{predict_dat_network}
\title{Predict data-driven only network using glasso}
\usage{
predict_dat_network(
  data,
  cut_off = 0.1,
  n_prot,
  proteomic_responses,
  rho = 10^seq(-2, 0, 0.02),
  verbose = FALSE
)
}
\arguments{
\item{data}{input proteomics dataset for network inference. Gene in coloumns and samples in row.
With colnames as gene tags and rownames as sample tags.}

\item{cut_off}{Manually Setup cut off value for the strength of edge. Default at 0.1.}

\item{n_prot}{Antibody number of input data.}

\item{proteomic_responses}{Input drug perturbation data. With columns as antibody, rows as samples.}

\item{rho}{positive tuning parameter vector for elastic net penalty. Default at 10^seq(-2,0, 0.02)}

\item{verbose}{logical, whether to show additional debugging information}
}
\value{
a list is returned with the following entries:
* "nedges": Number of edges in final network
* "t_net_no_cutoff": Network with out cutoff filtering calculated at optimal_rho
* "t_net": Network with cutoff filtering
* "optimal_rho": rho at minimum BIC
* "bic": Calculated BIC values  
* "rho": rho values examined
* "wk" inferred network matrix form with edge strength value default at 1 for
upregulate and -1 for down regulate.
* "wks" as inferred network matrix form with edge strength value default at 1 for
upregulate and -1 for down regulate and 2 for phosphorylation and -2 for dephosphorylation.
* "dist_ind" A distance file of edgelist with a third column as the network distance
between the genes in the interaction.
* "inter" file as edgelist of inferred network.
* "edgelist" file as sif file of edgelist for inferred network.
}
\description{
Predict data-driven only network using glasso
}
\note{
proteomic_responses is used only to retrieve the desired list of 
entries for the resulting network
}
\examples{
# Read proteomic response for cellline1
file <- system.file("test_data", "BT474.csv", package = "targetscore")
proteomic_responses <- read.csv(file, row.names = 1)

# Read Global Signaling file for BRCA
file <- system.file("test_data", "TCGA-BRCA-L4.csv", package = "targetscore")
signaling_responses <- read.csv(file, row.names = 1)

 # Extract network
 network <- targetscore::predict_dat_network(
 data <- signaling_responses,
 n_prot = dim(proteomic_responses)[2],
 proteomic_responses = proteomic_responses
 )

}
\concept{targetscore}
